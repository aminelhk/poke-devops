name: Docker Pull, Tag, and Deploy

on:
  push:
    tags:
      - "*" # Trigger on all tags

jobs:
  pull-tag-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCLOUD_SERVICE_ACCOUNT_KEY }}

      - name: Configure docker to use the gcloud command-line tool as a credential helper
        run: gcloud auth configure-docker europe-west9-docker.pkg.dev

      - name: Extract Git tag name
        id: vars
        run: |
          TAG_NAME=$(echo "${{ github.ref }}" | awk -F'/' '{print $3}')
          echo "::set-output name=tag_name::${TAG_NAME}"
          echo "Tag name: $TAG_NAME"

      - name: Check if Docker image with tag exists
        run: |
          if docker pull europe-west9-docker.pkg.dev/pokedevops/student-amine/service-student-amine-dev:${{ steps.vars.outputs.tag_name }}; then
            echo "Image exists, pulling..."
          else
            echo "Image not found or error pulling image."
            exit 1
          fi

      - name: Tag Docker image with new tag
        run: |
          docker tag europe-west9-docker.pkg.dev/pokedevops/student-amine/service-student-amine-dev:${{ steps.vars.outputs.tag_name }} europe-west9-docker.pkg.dev/pokedevops/student-amine/service-student-amine-preprod:${{ steps.vars.outputs.tag_name }}

      - name: Push Docker image with new tag
        run: |
          docker push europe-west9-docker.pkg.dev/pokedevops/student-amine/service-student-amine-preprod:${{ steps.vars.outputs.tag_name }}

      - name: Deploy to Cloud Run
        env:
          PROJECT_ID: "pokedevops"
          SERVICE_NAME: "service-student-amine-preprod"
          REGION: "europe-west9"
          IMAGE: "europe-west9-docker.pkg.dev/pokedevops/student-amine/service-student-amine-preprod:${{ steps.vars.outputs.tag_name }}"
        run: |
          gcloud run deploy $SERVICE_NAME \
            --image $IMAGE \
            --region $REGION \
            --platform managed \
            --allow-unauthenticated
